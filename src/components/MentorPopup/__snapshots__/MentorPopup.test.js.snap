// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`MentorPopup should match the correct snapshot 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <MentorPopup
    id={1}
    name="some name"
    sendMessage={[MockFunction]}
    tech_skills={
      Array [
        "skill",
      ]
    }
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <p>
           
        </p>,
        <p />,
        <p />,
        <p />,
        <p />,
        <div />,
        <div>
          <p>
            Tech skillz: 
            skill
          </p>
        </div>,
        <div />,
        <p>
          ...availabilities here...
        </p>,
        <div>
          <textarea
            className="bg-info"
            name="text"
            onChange={[Function]}
            placeholder="send slack message"
            value=""
          />
        </div>,
        <button
          onClick={[Function]}
        >
          Submit
        </button>,
        <Link
          to="/mentors"
        >
          GO BACK
        </Link>,
      ],
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            undefined,
            " ",
            undefined,
            undefined,
          ],
        },
        "ref": null,
        "rendered": Array [
          undefined,
          " ",
          undefined,
          undefined,
        ],
        "type": "p",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": undefined,
        },
        "ref": null,
        "rendered": null,
        "type": "p",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            undefined,
            undefined,
          ],
        },
        "ref": null,
        "rendered": Array [
          undefined,
          undefined,
        ],
        "type": "p",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": undefined,
        },
        "ref": null,
        "rendered": null,
        "type": "p",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": undefined,
        },
        "ref": null,
        "rendered": null,
        "type": "p",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": undefined,
        },
        "ref": null,
        "rendered": null,
        "type": "div",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <p>
              Tech skillz: 
              skill
            </p>,
          ],
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": "0",
            "nodeType": "host",
            "props": Object {
              "children": Array [
                "Tech skillz: ",
                "skill",
              ],
            },
            "ref": null,
            "rendered": Array [
              "Tech skillz: ",
              "skill",
            ],
            "type": "p",
          },
        ],
        "type": "div",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": undefined,
        },
        "ref": null,
        "rendered": null,
        "type": "div",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": "...availabilities here...",
        },
        "ref": null,
        "rendered": "...availabilities here...",
        "type": "p",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <textarea
            className="bg-info"
            name="text"
            onChange={[Function]}
            placeholder="send slack message"
            value=""
          />,
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "className": "bg-info",
            "name": "text",
            "onChange": [Function],
            "placeholder": "send slack message",
            "value": "",
          },
          "ref": null,
          "rendered": null,
          "type": "textarea",
        },
        "type": "div",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": "Submit",
          "onClick": [Function],
        },
        "ref": null,
        "rendered": "Submit",
        "type": "button",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": "GO BACK",
          "to": "/mentors",
        },
        "ref": null,
        "rendered": "GO BACK",
        "type": [Function],
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <p>
             
          </p>,
          <p />,
          <p />,
          <p />,
          <p />,
          <div />,
          <div>
            <p>
              Tech skillz: 
              skill
            </p>
          </div>,
          <div />,
          <p>
            ...availabilities here...
          </p>,
          <div>
            <textarea
              className="bg-info"
              name="text"
              onChange={[Function]}
              placeholder="send slack message"
              value=""
            />
          </div>,
          <button
            onClick={[Function]}
          >
            Submit
          </button>,
          <Link
            to="/mentors"
          >
            GO BACK
          </Link>,
        ],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              undefined,
              " ",
              undefined,
              undefined,
            ],
          },
          "ref": null,
          "rendered": Array [
            undefined,
            " ",
            undefined,
            undefined,
          ],
          "type": "p",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": undefined,
          },
          "ref": null,
          "rendered": null,
          "type": "p",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              undefined,
              undefined,
            ],
          },
          "ref": null,
          "rendered": Array [
            undefined,
            undefined,
          ],
          "type": "p",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": undefined,
          },
          "ref": null,
          "rendered": null,
          "type": "p",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": undefined,
          },
          "ref": null,
          "rendered": null,
          "type": "p",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": undefined,
          },
          "ref": null,
          "rendered": null,
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <p>
                Tech skillz: 
                skill
              </p>,
            ],
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": "0",
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  "Tech skillz: ",
                  "skill",
                ],
              },
              "ref": null,
              "rendered": Array [
                "Tech skillz: ",
                "skill",
              ],
              "type": "p",
            },
          ],
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": undefined,
          },
          "ref": null,
          "rendered": null,
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "...availabilities here...",
          },
          "ref": null,
          "rendered": "...availabilities here...",
          "type": "p",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <textarea
              className="bg-info"
              name="text"
              onChange={[Function]}
              placeholder="send slack message"
              value=""
            />,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "className": "bg-info",
              "name": "text",
              "onChange": [Function],
              "placeholder": "send slack message",
              "value": "",
            },
            "ref": null,
            "rendered": null,
            "type": "textarea",
          },
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "Submit",
            "onClick": [Function],
          },
          "ref": null,
          "rendered": "Submit",
          "type": "button",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": "GO BACK",
            "to": "/mentors",
          },
          "ref": null,
          "rendered": "GO BACK",
          "type": [Function],
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromProps": Object {
            "hasShouldComponentUpdateBug": false,
          },
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
  Symbol(enzyme.__childContext__): null,
}
`;
