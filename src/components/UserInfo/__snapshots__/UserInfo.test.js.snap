// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`UserInfo initial state & snapshot should match the correct mentee snapshot 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <UserInfo
    updateUserInfo={[MockFunction]}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <form
          autoComplete="off"
          onSubmit={[Function]}
        >
          <span
            className="pages"
          >
             User info:
          </span>
          <CreateInput
            field="first_name"
            handleChange={[Function]}
            max="28"
            text="First Name"
            value=""
          />
          <CreateInput
            field="last_name"
            handleChange={[Function]}
            max="28"
            text="Last Name"
            value=""
          />
          <div
            className="check-box"
          >
            <CreateCheckbox
              checkBoxes={[Function]}
              checked={false}
              field="identities"
              name="Male"
              value={1}
            />
            <CreateCheckbox
              checkBoxes={[Function]}
              checked={false}
              field="identities"
              name="Female"
              value={2}
            />
            <CreateCheckbox
              checkBoxes={[Function]}
              checked={false}
              field="identities"
              name="Non-Binary"
              value={3}
            />
          </div>
          <div>
            <CreateInput
              field="cohort"
              handleChange={[Function]}
              max="4"
              text="Cohort (ex: 1406)"
              value=""
            />
            <CreateCheckbox
              checkBoxes={[Function]}
              checked={false}
              className="aa"
              field="program"
              name="BE"
              value="BE"
            />
            <CreateCheckbox
              checkBoxes={[Function]}
              checked={false}
              field="program"
              name="FE"
              value="FE"
            />
          </div>
        </form>,
        <div
          className="input-box"
        >
          <button
            className="next-btn"
            onClick={[Function]}
          >
            Next
          </button>
          <span
            className="pages"
          >
            1 of 
            4
          </span>
        </div>,
      ],
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "autoComplete": "off",
          "children": Array [
            <span
              className="pages"
            >
               User info:
            </span>,
            <CreateInput
              field="first_name"
              handleChange={[Function]}
              max="28"
              text="First Name"
              value=""
            />,
            <CreateInput
              field="last_name"
              handleChange={[Function]}
              max="28"
              text="Last Name"
              value=""
            />,
            <div
              className="check-box"
            >
              <CreateCheckbox
                checkBoxes={[Function]}
                checked={false}
                field="identities"
                name="Male"
                value={1}
              />
              <CreateCheckbox
                checkBoxes={[Function]}
                checked={false}
                field="identities"
                name="Female"
                value={2}
              />
              <CreateCheckbox
                checkBoxes={[Function]}
                checked={false}
                field="identities"
                name="Non-Binary"
                value={3}
              />
            </div>,
            <div>
              <CreateInput
                field="cohort"
                handleChange={[Function]}
                max="4"
                text="Cohort (ex: 1406)"
                value=""
              />
              <CreateCheckbox
                checkBoxes={[Function]}
                checked={false}
                className="aa"
                field="program"
                name="BE"
                value="BE"
              />
              <CreateCheckbox
                checkBoxes={[Function]}
                checked={false}
                field="program"
                name="FE"
                value="FE"
              />
            </div>,
          ],
          "onSubmit": [Function],
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                undefined,
                " User info:",
              ],
              "className": "pages",
            },
            "ref": null,
            "rendered": Array [
              undefined,
              " User info:",
            ],
            "type": "span",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "field": "first_name",
              "handleChange": [Function],
              "max": "28",
              "text": "First Name",
              "value": "",
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "field": "last_name",
              "handleChange": [Function],
              "max": "28",
              "text": "Last Name",
              "value": "",
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <CreateCheckbox
                  checkBoxes={[Function]}
                  checked={false}
                  field="identities"
                  name="Male"
                  value={1}
                />,
                <CreateCheckbox
                  checkBoxes={[Function]}
                  checked={false}
                  field="identities"
                  name="Female"
                  value={2}
                />,
                <CreateCheckbox
                  checkBoxes={[Function]}
                  checked={false}
                  field="identities"
                  name="Non-Binary"
                  value={3}
                />,
              ],
              "className": "check-box",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": "0",
                "nodeType": "class",
                "props": Object {
                  "checkBoxes": [Function],
                  "checked": false,
                  "field": "identities",
                  "name": "Male",
                  "value": 1,
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": "1",
                "nodeType": "class",
                "props": Object {
                  "checkBoxes": [Function],
                  "checked": false,
                  "field": "identities",
                  "name": "Female",
                  "value": 2,
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": "2",
                "nodeType": "class",
                "props": Object {
                  "checkBoxes": [Function],
                  "checked": false,
                  "field": "identities",
                  "name": "Non-Binary",
                  "value": 3,
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
            ],
            "type": "div",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <CreateInput
                  field="cohort"
                  handleChange={[Function]}
                  max="4"
                  text="Cohort (ex: 1406)"
                  value=""
                />,
                <CreateCheckbox
                  checkBoxes={[Function]}
                  checked={false}
                  className="aa"
                  field="program"
                  name="BE"
                  value="BE"
                />,
                <CreateCheckbox
                  checkBoxes={[Function]}
                  checked={false}
                  field="program"
                  name="FE"
                  value="FE"
                />,
              ],
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "field": "cohort",
                  "handleChange": [Function],
                  "max": "4",
                  "text": "Cohort (ex: 1406)",
                  "value": "",
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "checkBoxes": [Function],
                  "checked": false,
                  "className": "aa",
                  "field": "program",
                  "name": "BE",
                  "value": "BE",
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "checkBoxes": [Function],
                  "checked": false,
                  "field": "program",
                  "name": "FE",
                  "value": "FE",
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
            ],
            "type": "div",
          },
        ],
        "type": "form",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            false,
            <button
              className="next-btn"
              onClick={[Function]}
            >
              Next
            </button>,
            <span
              className="pages"
            >
              1 of 
              4
            </span>,
          ],
          "className": "input-box",
        },
        "ref": null,
        "rendered": Array [
          false,
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Next",
              "className": "next-btn",
              "onClick": [Function],
            },
            "ref": null,
            "rendered": "Next",
            "type": "button",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                "1 of ",
                "4",
              ],
              "className": "pages",
            },
            "ref": null,
            "rendered": Array [
              "1 of ",
              "4",
            ],
            "type": "span",
          },
        ],
        "type": "div",
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <form
            autoComplete="off"
            onSubmit={[Function]}
          >
            <span
              className="pages"
            >
               User info:
            </span>
            <CreateInput
              field="first_name"
              handleChange={[Function]}
              max="28"
              text="First Name"
              value=""
            />
            <CreateInput
              field="last_name"
              handleChange={[Function]}
              max="28"
              text="Last Name"
              value=""
            />
            <div
              className="check-box"
            >
              <CreateCheckbox
                checkBoxes={[Function]}
                checked={false}
                field="identities"
                name="Male"
                value={1}
              />
              <CreateCheckbox
                checkBoxes={[Function]}
                checked={false}
                field="identities"
                name="Female"
                value={2}
              />
              <CreateCheckbox
                checkBoxes={[Function]}
                checked={false}
                field="identities"
                name="Non-Binary"
                value={3}
              />
            </div>
            <div>
              <CreateInput
                field="cohort"
                handleChange={[Function]}
                max="4"
                text="Cohort (ex: 1406)"
                value=""
              />
              <CreateCheckbox
                checkBoxes={[Function]}
                checked={false}
                className="aa"
                field="program"
                name="BE"
                value="BE"
              />
              <CreateCheckbox
                checkBoxes={[Function]}
                checked={false}
                field="program"
                name="FE"
                value="FE"
              />
            </div>
          </form>,
          <div
            className="input-box"
          >
            <button
              className="next-btn"
              onClick={[Function]}
            >
              Next
            </button>
            <span
              className="pages"
            >
              1 of 
              4
            </span>
          </div>,
        ],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "autoComplete": "off",
            "children": Array [
              <span
                className="pages"
              >
                 User info:
              </span>,
              <CreateInput
                field="first_name"
                handleChange={[Function]}
                max="28"
                text="First Name"
                value=""
              />,
              <CreateInput
                field="last_name"
                handleChange={[Function]}
                max="28"
                text="Last Name"
                value=""
              />,
              <div
                className="check-box"
              >
                <CreateCheckbox
                  checkBoxes={[Function]}
                  checked={false}
                  field="identities"
                  name="Male"
                  value={1}
                />
                <CreateCheckbox
                  checkBoxes={[Function]}
                  checked={false}
                  field="identities"
                  name="Female"
                  value={2}
                />
                <CreateCheckbox
                  checkBoxes={[Function]}
                  checked={false}
                  field="identities"
                  name="Non-Binary"
                  value={3}
                />
              </div>,
              <div>
                <CreateInput
                  field="cohort"
                  handleChange={[Function]}
                  max="4"
                  text="Cohort (ex: 1406)"
                  value=""
                />
                <CreateCheckbox
                  checkBoxes={[Function]}
                  checked={false}
                  className="aa"
                  field="program"
                  name="BE"
                  value="BE"
                />
                <CreateCheckbox
                  checkBoxes={[Function]}
                  checked={false}
                  field="program"
                  name="FE"
                  value="FE"
                />
              </div>,
            ],
            "onSubmit": [Function],
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  undefined,
                  " User info:",
                ],
                "className": "pages",
              },
              "ref": null,
              "rendered": Array [
                undefined,
                " User info:",
              ],
              "type": "span",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "field": "first_name",
                "handleChange": [Function],
                "max": "28",
                "text": "First Name",
                "value": "",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "field": "last_name",
                "handleChange": [Function],
                "max": "28",
                "text": "Last Name",
                "value": "",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <CreateCheckbox
                    checkBoxes={[Function]}
                    checked={false}
                    field="identities"
                    name="Male"
                    value={1}
                  />,
                  <CreateCheckbox
                    checkBoxes={[Function]}
                    checked={false}
                    field="identities"
                    name="Female"
                    value={2}
                  />,
                  <CreateCheckbox
                    checkBoxes={[Function]}
                    checked={false}
                    field="identities"
                    name="Non-Binary"
                    value={3}
                  />,
                ],
                "className": "check-box",
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": "0",
                  "nodeType": "class",
                  "props": Object {
                    "checkBoxes": [Function],
                    "checked": false,
                    "field": "identities",
                    "name": "Male",
                    "value": 1,
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": "1",
                  "nodeType": "class",
                  "props": Object {
                    "checkBoxes": [Function],
                    "checked": false,
                    "field": "identities",
                    "name": "Female",
                    "value": 2,
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": "2",
                  "nodeType": "class",
                  "props": Object {
                    "checkBoxes": [Function],
                    "checked": false,
                    "field": "identities",
                    "name": "Non-Binary",
                    "value": 3,
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
              ],
              "type": "div",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <CreateInput
                    field="cohort"
                    handleChange={[Function]}
                    max="4"
                    text="Cohort (ex: 1406)"
                    value=""
                  />,
                  <CreateCheckbox
                    checkBoxes={[Function]}
                    checked={false}
                    className="aa"
                    field="program"
                    name="BE"
                    value="BE"
                  />,
                  <CreateCheckbox
                    checkBoxes={[Function]}
                    checked={false}
                    field="program"
                    name="FE"
                    value="FE"
                  />,
                ],
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "field": "cohort",
                    "handleChange": [Function],
                    "max": "4",
                    "text": "Cohort (ex: 1406)",
                    "value": "",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "checkBoxes": [Function],
                    "checked": false,
                    "className": "aa",
                    "field": "program",
                    "name": "BE",
                    "value": "BE",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "checkBoxes": [Function],
                    "checked": false,
                    "field": "program",
                    "name": "FE",
                    "value": "FE",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
              ],
              "type": "div",
            },
          ],
          "type": "form",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              false,
              <button
                className="next-btn"
                onClick={[Function]}
              >
                Next
              </button>,
              <span
                className="pages"
              >
                1 of 
                4
              </span>,
            ],
            "className": "input-box",
          },
          "ref": null,
          "rendered": Array [
            false,
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "Next",
                "className": "next-btn",
                "onClick": [Function],
              },
              "ref": null,
              "rendered": "Next",
              "type": "button",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  "1 of ",
                  "4",
                ],
                "className": "pages",
              },
              "ref": null,
              "rendered": Array [
                "1 of ",
                "4",
              ],
              "type": "span",
            },
          ],
          "type": "div",
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromProps": Object {
            "hasShouldComponentUpdateBug": false,
          },
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
  Symbol(enzyme.__childContext__): null,
}
`;

exports[`UserInfo initial state & snapshot should match the correct mentor snapshot 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <UserInfo
    updateUserInfo={[MockFunction]}
    user="Mentor"
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <form
          autoComplete="off"
          onSubmit={[Function]}
        >
          <span
            className="pages"
          >
            Mentor
             User info:
          </span>
          <CreateInput
            field="first_name"
            handleChange={[Function]}
            max="28"
            text="First Name"
            value=""
          />
          <CreateInput
            field="last_name"
            handleChange={[Function]}
            max="28"
            text="Last Name"
            value=""
          />
          <div
            className="check-box"
          >
            <CreateCheckbox
              checkBoxes={[Function]}
              checked={false}
              field="identities"
              name="Male"
              value={1}
            />
            <CreateCheckbox
              checkBoxes={[Function]}
              checked={false}
              field="identities"
              name="Female"
              value={2}
            />
            <CreateCheckbox
              checkBoxes={[Function]}
              checked={false}
              field="identities"
              name="Non-Binary"
              value={3}
            />
          </div>
          <div>
            <CreateInput
              field="cohort"
              handleChange={[Function]}
              max="4"
              text="Cohort (ex: 1406)"
              value=""
            />
            <CreateCheckbox
              checkBoxes={[Function]}
              checked={false}
              className="aa"
              field="program"
              name="BE"
              value="BE"
            />
            <CreateCheckbox
              checkBoxes={[Function]}
              checked={false}
              field="program"
              name="FE"
              value="FE"
            />
          </div>
        </form>,
        <div
          className="input-box"
        >
          <CreateInput
            field="current_job"
            handleChange={[Function]}
            max="28"
            text="Current Job"
            value=""
          />
          <button
            className="next-btn"
            onClick={[Function]}
          >
            Next
          </button>
          <span
            className="pages"
          >
            1 of 
            6
          </span>
        </div>,
      ],
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "autoComplete": "off",
          "children": Array [
            <span
              className="pages"
            >
              Mentor
               User info:
            </span>,
            <CreateInput
              field="first_name"
              handleChange={[Function]}
              max="28"
              text="First Name"
              value=""
            />,
            <CreateInput
              field="last_name"
              handleChange={[Function]}
              max="28"
              text="Last Name"
              value=""
            />,
            <div
              className="check-box"
            >
              <CreateCheckbox
                checkBoxes={[Function]}
                checked={false}
                field="identities"
                name="Male"
                value={1}
              />
              <CreateCheckbox
                checkBoxes={[Function]}
                checked={false}
                field="identities"
                name="Female"
                value={2}
              />
              <CreateCheckbox
                checkBoxes={[Function]}
                checked={false}
                field="identities"
                name="Non-Binary"
                value={3}
              />
            </div>,
            <div>
              <CreateInput
                field="cohort"
                handleChange={[Function]}
                max="4"
                text="Cohort (ex: 1406)"
                value=""
              />
              <CreateCheckbox
                checkBoxes={[Function]}
                checked={false}
                className="aa"
                field="program"
                name="BE"
                value="BE"
              />
              <CreateCheckbox
                checkBoxes={[Function]}
                checked={false}
                field="program"
                name="FE"
                value="FE"
              />
            </div>,
          ],
          "onSubmit": [Function],
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                "Mentor",
                " User info:",
              ],
              "className": "pages",
            },
            "ref": null,
            "rendered": Array [
              "Mentor",
              " User info:",
            ],
            "type": "span",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "field": "first_name",
              "handleChange": [Function],
              "max": "28",
              "text": "First Name",
              "value": "",
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "field": "last_name",
              "handleChange": [Function],
              "max": "28",
              "text": "Last Name",
              "value": "",
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <CreateCheckbox
                  checkBoxes={[Function]}
                  checked={false}
                  field="identities"
                  name="Male"
                  value={1}
                />,
                <CreateCheckbox
                  checkBoxes={[Function]}
                  checked={false}
                  field="identities"
                  name="Female"
                  value={2}
                />,
                <CreateCheckbox
                  checkBoxes={[Function]}
                  checked={false}
                  field="identities"
                  name="Non-Binary"
                  value={3}
                />,
              ],
              "className": "check-box",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": "0",
                "nodeType": "class",
                "props": Object {
                  "checkBoxes": [Function],
                  "checked": false,
                  "field": "identities",
                  "name": "Male",
                  "value": 1,
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": "1",
                "nodeType": "class",
                "props": Object {
                  "checkBoxes": [Function],
                  "checked": false,
                  "field": "identities",
                  "name": "Female",
                  "value": 2,
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": "2",
                "nodeType": "class",
                "props": Object {
                  "checkBoxes": [Function],
                  "checked": false,
                  "field": "identities",
                  "name": "Non-Binary",
                  "value": 3,
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
            ],
            "type": "div",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <CreateInput
                  field="cohort"
                  handleChange={[Function]}
                  max="4"
                  text="Cohort (ex: 1406)"
                  value=""
                />,
                <CreateCheckbox
                  checkBoxes={[Function]}
                  checked={false}
                  className="aa"
                  field="program"
                  name="BE"
                  value="BE"
                />,
                <CreateCheckbox
                  checkBoxes={[Function]}
                  checked={false}
                  field="program"
                  name="FE"
                  value="FE"
                />,
              ],
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "field": "cohort",
                  "handleChange": [Function],
                  "max": "4",
                  "text": "Cohort (ex: 1406)",
                  "value": "",
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "checkBoxes": [Function],
                  "checked": false,
                  "className": "aa",
                  "field": "program",
                  "name": "BE",
                  "value": "BE",
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "checkBoxes": [Function],
                  "checked": false,
                  "field": "program",
                  "name": "FE",
                  "value": "FE",
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
            ],
            "type": "div",
          },
        ],
        "type": "form",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <CreateInput
              field="current_job"
              handleChange={[Function]}
              max="28"
              text="Current Job"
              value=""
            />,
            <button
              className="next-btn"
              onClick={[Function]}
            >
              Next
            </button>,
            <span
              className="pages"
            >
              1 of 
              6
            </span>,
          ],
          "className": "input-box",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "field": "current_job",
              "handleChange": [Function],
              "max": "28",
              "text": "Current Job",
              "value": "",
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Next",
              "className": "next-btn",
              "onClick": [Function],
            },
            "ref": null,
            "rendered": "Next",
            "type": "button",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                "1 of ",
                "6",
              ],
              "className": "pages",
            },
            "ref": null,
            "rendered": Array [
              "1 of ",
              "6",
            ],
            "type": "span",
          },
        ],
        "type": "div",
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <form
            autoComplete="off"
            onSubmit={[Function]}
          >
            <span
              className="pages"
            >
              Mentor
               User info:
            </span>
            <CreateInput
              field="first_name"
              handleChange={[Function]}
              max="28"
              text="First Name"
              value=""
            />
            <CreateInput
              field="last_name"
              handleChange={[Function]}
              max="28"
              text="Last Name"
              value=""
            />
            <div
              className="check-box"
            >
              <CreateCheckbox
                checkBoxes={[Function]}
                checked={false}
                field="identities"
                name="Male"
                value={1}
              />
              <CreateCheckbox
                checkBoxes={[Function]}
                checked={false}
                field="identities"
                name="Female"
                value={2}
              />
              <CreateCheckbox
                checkBoxes={[Function]}
                checked={false}
                field="identities"
                name="Non-Binary"
                value={3}
              />
            </div>
            <div>
              <CreateInput
                field="cohort"
                handleChange={[Function]}
                max="4"
                text="Cohort (ex: 1406)"
                value=""
              />
              <CreateCheckbox
                checkBoxes={[Function]}
                checked={false}
                className="aa"
                field="program"
                name="BE"
                value="BE"
              />
              <CreateCheckbox
                checkBoxes={[Function]}
                checked={false}
                field="program"
                name="FE"
                value="FE"
              />
            </div>
          </form>,
          <div
            className="input-box"
          >
            <CreateInput
              field="current_job"
              handleChange={[Function]}
              max="28"
              text="Current Job"
              value=""
            />
            <button
              className="next-btn"
              onClick={[Function]}
            >
              Next
            </button>
            <span
              className="pages"
            >
              1 of 
              6
            </span>
          </div>,
        ],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "autoComplete": "off",
            "children": Array [
              <span
                className="pages"
              >
                Mentor
                 User info:
              </span>,
              <CreateInput
                field="first_name"
                handleChange={[Function]}
                max="28"
                text="First Name"
                value=""
              />,
              <CreateInput
                field="last_name"
                handleChange={[Function]}
                max="28"
                text="Last Name"
                value=""
              />,
              <div
                className="check-box"
              >
                <CreateCheckbox
                  checkBoxes={[Function]}
                  checked={false}
                  field="identities"
                  name="Male"
                  value={1}
                />
                <CreateCheckbox
                  checkBoxes={[Function]}
                  checked={false}
                  field="identities"
                  name="Female"
                  value={2}
                />
                <CreateCheckbox
                  checkBoxes={[Function]}
                  checked={false}
                  field="identities"
                  name="Non-Binary"
                  value={3}
                />
              </div>,
              <div>
                <CreateInput
                  field="cohort"
                  handleChange={[Function]}
                  max="4"
                  text="Cohort (ex: 1406)"
                  value=""
                />
                <CreateCheckbox
                  checkBoxes={[Function]}
                  checked={false}
                  className="aa"
                  field="program"
                  name="BE"
                  value="BE"
                />
                <CreateCheckbox
                  checkBoxes={[Function]}
                  checked={false}
                  field="program"
                  name="FE"
                  value="FE"
                />
              </div>,
            ],
            "onSubmit": [Function],
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  "Mentor",
                  " User info:",
                ],
                "className": "pages",
              },
              "ref": null,
              "rendered": Array [
                "Mentor",
                " User info:",
              ],
              "type": "span",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "field": "first_name",
                "handleChange": [Function],
                "max": "28",
                "text": "First Name",
                "value": "",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "field": "last_name",
                "handleChange": [Function],
                "max": "28",
                "text": "Last Name",
                "value": "",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <CreateCheckbox
                    checkBoxes={[Function]}
                    checked={false}
                    field="identities"
                    name="Male"
                    value={1}
                  />,
                  <CreateCheckbox
                    checkBoxes={[Function]}
                    checked={false}
                    field="identities"
                    name="Female"
                    value={2}
                  />,
                  <CreateCheckbox
                    checkBoxes={[Function]}
                    checked={false}
                    field="identities"
                    name="Non-Binary"
                    value={3}
                  />,
                ],
                "className": "check-box",
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": "0",
                  "nodeType": "class",
                  "props": Object {
                    "checkBoxes": [Function],
                    "checked": false,
                    "field": "identities",
                    "name": "Male",
                    "value": 1,
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": "1",
                  "nodeType": "class",
                  "props": Object {
                    "checkBoxes": [Function],
                    "checked": false,
                    "field": "identities",
                    "name": "Female",
                    "value": 2,
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": "2",
                  "nodeType": "class",
                  "props": Object {
                    "checkBoxes": [Function],
                    "checked": false,
                    "field": "identities",
                    "name": "Non-Binary",
                    "value": 3,
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
              ],
              "type": "div",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <CreateInput
                    field="cohort"
                    handleChange={[Function]}
                    max="4"
                    text="Cohort (ex: 1406)"
                    value=""
                  />,
                  <CreateCheckbox
                    checkBoxes={[Function]}
                    checked={false}
                    className="aa"
                    field="program"
                    name="BE"
                    value="BE"
                  />,
                  <CreateCheckbox
                    checkBoxes={[Function]}
                    checked={false}
                    field="program"
                    name="FE"
                    value="FE"
                  />,
                ],
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "field": "cohort",
                    "handleChange": [Function],
                    "max": "4",
                    "text": "Cohort (ex: 1406)",
                    "value": "",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "checkBoxes": [Function],
                    "checked": false,
                    "className": "aa",
                    "field": "program",
                    "name": "BE",
                    "value": "BE",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "checkBoxes": [Function],
                    "checked": false,
                    "field": "program",
                    "name": "FE",
                    "value": "FE",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
              ],
              "type": "div",
            },
          ],
          "type": "form",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <CreateInput
                field="current_job"
                handleChange={[Function]}
                max="28"
                text="Current Job"
                value=""
              />,
              <button
                className="next-btn"
                onClick={[Function]}
              >
                Next
              </button>,
              <span
                className="pages"
              >
                1 of 
                6
              </span>,
            ],
            "className": "input-box",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "field": "current_job",
                "handleChange": [Function],
                "max": "28",
                "text": "Current Job",
                "value": "",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "Next",
                "className": "next-btn",
                "onClick": [Function],
              },
              "ref": null,
              "rendered": "Next",
              "type": "button",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  "1 of ",
                  "6",
                ],
                "className": "pages",
              },
              "ref": null,
              "rendered": Array [
                "1 of ",
                "6",
              ],
              "type": "span",
            },
          ],
          "type": "div",
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromProps": Object {
            "hasShouldComponentUpdateBug": false,
          },
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
  Symbol(enzyme.__childContext__): null,
}
`;
