// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`CreateInput should match the snapshot 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <CreateInput
    field="field"
    handleChange={[MockFunction]}
    max="99"
    text="someText"
    value="someValue"
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <input
          className="input-effect"
          maxLength="99"
          name="field"
          onBlur={[Function]}
          onChange={[MockFunction]}
          placeholder=""
          type="text"
        />,
        <label>
          someText
        </label>,
        <span
          className="focus-border"
        />,
      ],
      "className": "input-box",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "className": "input-effect",
          "maxLength": "99",
          "name": "field",
          "onBlur": [Function],
          "onChange": [MockFunction],
          "placeholder": "",
          "type": "text",
        },
        "ref": null,
        "rendered": null,
        "type": "input",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": "someText",
        },
        "ref": null,
        "rendered": "someText",
        "type": "label",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "className": "focus-border",
        },
        "ref": null,
        "rendered": null,
        "type": "span",
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <input
            className="input-effect"
            maxLength="99"
            name="field"
            onBlur={[Function]}
            onChange={[MockFunction]}
            placeholder=""
            type="text"
          />,
          <label>
            someText
          </label>,
          <span
            className="focus-border"
          />,
        ],
        "className": "input-box",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "className": "input-effect",
            "maxLength": "99",
            "name": "field",
            "onBlur": [Function],
            "onChange": [MockFunction],
            "placeholder": "",
            "type": "text",
          },
          "ref": null,
          "rendered": null,
          "type": "input",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "someText",
          },
          "ref": null,
          "rendered": "someText",
          "type": "label",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "className": "focus-border",
          },
          "ref": null,
          "rendered": null,
          "type": "span",
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromProps": Object {
            "hasShouldComponentUpdateBug": false,
          },
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
  Symbol(enzyme.__childContext__): null,
}
`;
