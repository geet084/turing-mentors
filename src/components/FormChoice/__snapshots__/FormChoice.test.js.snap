// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`FormChoice should have match the correct snapshot 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <FormChoice />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <div>
          <Link
            className="form-link"
            to="/mentors"
          >
            Show Mentors
          </Link>
        </div>,
        <div>
          <Link
            className="form-link"
            to="/mentee"
          >
            Mentee
          </Link>
          <Link
            className="form-link"
            to="/mentor"
          >
            Mentor
          </Link>
        </div>,
      ],
      "className": "form-choice",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <Link
            className="form-link"
            to="/mentors"
          >
            Show Mentors
          </Link>,
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": "Show Mentors",
            "className": "form-link",
            "to": "/mentors",
          },
          "ref": null,
          "rendered": "Show Mentors",
          "type": [Function],
        },
        "type": "div",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <Link
              className="form-link"
              to="/mentee"
            >
              Mentee
            </Link>,
            <Link
              className="form-link"
              to="/mentor"
            >
              Mentor
            </Link>,
          ],
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": "Mentee",
              "className": "form-link",
              "to": "/mentee",
            },
            "ref": null,
            "rendered": "Mentee",
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": "Mentor",
              "className": "form-link",
              "to": "/mentor",
            },
            "ref": null,
            "rendered": "Mentor",
            "type": [Function],
          },
        ],
        "type": "div",
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <div>
            <Link
              className="form-link"
              to="/mentors"
            >
              Show Mentors
            </Link>
          </div>,
          <div>
            <Link
              className="form-link"
              to="/mentee"
            >
              Mentee
            </Link>
            <Link
              className="form-link"
              to="/mentor"
            >
              Mentor
            </Link>
          </div>,
        ],
        "className": "form-choice",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <Link
              className="form-link"
              to="/mentors"
            >
              Show Mentors
            </Link>,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": "Show Mentors",
              "className": "form-link",
              "to": "/mentors",
            },
            "ref": null,
            "rendered": "Show Mentors",
            "type": [Function],
          },
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <Link
                className="form-link"
                to="/mentee"
              >
                Mentee
              </Link>,
              <Link
                className="form-link"
                to="/mentor"
              >
                Mentor
              </Link>,
            ],
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": "Mentee",
                "className": "form-link",
                "to": "/mentee",
              },
              "ref": null,
              "rendered": "Mentee",
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": "Mentor",
                "className": "form-link",
                "to": "/mentor",
              },
              "ref": null,
              "rendered": "Mentor",
              "type": [Function],
            },
          ],
          "type": "div",
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromProps": Object {
            "hasShouldComponentUpdateBug": false,
          },
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
