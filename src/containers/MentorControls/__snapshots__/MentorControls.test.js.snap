// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`MentorControls initial should have match the correct snapshot 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <MentorControls
    denver={false}
    handleChange={[MockFunction]}
    javascript={false}
    remote={false}
    ruby={false}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <input
          name="javascript"
          onClick={[MockFunction]}
          type="checkbox"
        />,
        "JS",
        <input
          name="ruby"
          onClick={[MockFunction]}
          type="checkbox"
        />,
        "RUBY",
        <input
          name="denver"
          onClick={[MockFunction]}
          type="checkbox"
        />,
        "Denver",
        <input
          name="remote"
          onClick={[MockFunction]}
          type="checkbox"
        />,
        "Remote",
        <div />,
      ],
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "name": "javascript",
          "onClick": [MockFunction],
          "type": "checkbox",
        },
        "ref": null,
        "rendered": null,
        "type": "input",
      },
      "JS",
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "name": "ruby",
          "onClick": [MockFunction],
          "type": "checkbox",
        },
        "ref": null,
        "rendered": null,
        "type": "input",
      },
      "RUBY",
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "name": "denver",
          "onClick": [MockFunction],
          "type": "checkbox",
        },
        "ref": null,
        "rendered": null,
        "type": "input",
      },
      "Denver",
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "name": "remote",
          "onClick": [MockFunction],
          "type": "checkbox",
        },
        "ref": null,
        "rendered": null,
        "type": "input",
      },
      "Remote",
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            false,
            false,
            false,
            false,
          ],
        },
        "ref": null,
        "rendered": Array [
          false,
          false,
          false,
          false,
        ],
        "type": "div",
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <input
            name="javascript"
            onClick={[MockFunction]}
            type="checkbox"
          />,
          "JS",
          <input
            name="ruby"
            onClick={[MockFunction]}
            type="checkbox"
          />,
          "RUBY",
          <input
            name="denver"
            onClick={[MockFunction]}
            type="checkbox"
          />,
          "Denver",
          <input
            name="remote"
            onClick={[MockFunction]}
            type="checkbox"
          />,
          "Remote",
          <div />,
        ],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "name": "javascript",
            "onClick": [MockFunction],
            "type": "checkbox",
          },
          "ref": null,
          "rendered": null,
          "type": "input",
        },
        "JS",
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "name": "ruby",
            "onClick": [MockFunction],
            "type": "checkbox",
          },
          "ref": null,
          "rendered": null,
          "type": "input",
        },
        "RUBY",
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "name": "denver",
            "onClick": [MockFunction],
            "type": "checkbox",
          },
          "ref": null,
          "rendered": null,
          "type": "input",
        },
        "Denver",
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "name": "remote",
            "onClick": [MockFunction],
            "type": "checkbox",
          },
          "ref": null,
          "rendered": null,
          "type": "input",
        },
        "Remote",
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              false,
              false,
              false,
              false,
            ],
          },
          "ref": null,
          "rendered": Array [
            false,
            false,
            false,
            false,
          ],
          "type": "div",
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromProps": Object {
            "hasShouldComponentUpdateBug": false,
          },
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
  Symbol(enzyme.__childContext__): null,
}
`;
