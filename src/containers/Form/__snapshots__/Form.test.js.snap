// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Form snapshots should have match a page five snapshot 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Form
    location={
      Object {
        "pathname": "/mentor",
      }
    }
    sendForm={[MockFunction]}
    updateForm={[MockFunction]}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        false,
        false,
        false,
        false,
        false,
        <UserTechSkills
          updateUserInfo={[Function]}
          user="Mentor"
        />,
        false,
        false,
      ],
    },
    "ref": null,
    "rendered": Array [
      false,
      false,
      false,
      false,
      false,
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "updateUserInfo": [Function],
          "user": "Mentor",
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      false,
      false,
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          false,
          false,
          false,
          false,
          false,
          <UserTechSkills
            updateUserInfo={[Function]}
            user="Mentor"
          />,
          false,
          false,
        ],
      },
      "ref": null,
      "rendered": Array [
        false,
        false,
        false,
        false,
        false,
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "updateUserInfo": [Function],
            "user": "Mentor",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        false,
        false,
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromProps": Object {
            "hasShouldComponentUpdateBug": false,
          },
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
  Symbol(enzyme.__childContext__): null,
}
`;

exports[`Form snapshots should have match a page four snapshot 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Form
    location={
      Object {
        "pathname": "/mentor",
      }
    }
    sendForm={[MockFunction]}
    updateForm={[MockFunction]}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        false,
        false,
        false,
        false,
        false,
        false,
        false,
        <div
          className="complete"
        >
          <h1>
            Thank you!
          </h1>
          <Link
            onClick={[Function]}
            to="/"
          >
            Return Home
          </Link>
           
        </div>,
      ],
    },
    "ref": null,
    "rendered": Array [
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <h1>
              Thank you!
            </h1>,
            <Link
              onClick={[Function]}
              to="/"
            >
              Return Home
            </Link>,
            " ",
          ],
          "className": "complete",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Thank you!",
            },
            "ref": null,
            "rendered": "Thank you!",
            "type": "h1",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": "Return Home",
              "onClick": [Function],
              "to": "/",
            },
            "ref": null,
            "rendered": "Return Home",
            "type": [Function],
          },
          " ",
        ],
        "type": "div",
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          false,
          false,
          false,
          false,
          false,
          false,
          false,
          <div
            className="complete"
          >
            <h1>
              Thank you!
            </h1>
            <Link
              onClick={[Function]}
              to="/"
            >
              Return Home
            </Link>
             
          </div>,
        ],
      },
      "ref": null,
      "rendered": Array [
        false,
        false,
        false,
        false,
        false,
        false,
        false,
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <h1>
                Thank you!
              </h1>,
              <Link
                onClick={[Function]}
                to="/"
              >
                Return Home
              </Link>,
              " ",
            ],
            "className": "complete",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "Thank you!",
              },
              "ref": null,
              "rendered": "Thank you!",
              "type": "h1",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": "Return Home",
                "onClick": [Function],
                "to": "/",
              },
              "ref": null,
              "rendered": "Return Home",
              "type": [Function],
            },
            " ",
          ],
          "type": "div",
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromProps": Object {
            "hasShouldComponentUpdateBug": false,
          },
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
  Symbol(enzyme.__childContext__): null,
}
`;

exports[`Form snapshots should have match a page one snapshot(default) for mentee 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Form
    location={
      Object {
        "pathname": "/mentee",
      }
    }
    sendForm={[MockFunction]}
    updateForm={[MockFunction]}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <UserInfo
          updateUserInfo={[Function]}
          user="Mentee"
        />,
        false,
        false,
        false,
        false,
        false,
        false,
        false,
      ],
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "updateUserInfo": [Function],
          "user": "Mentee",
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      false,
      false,
      false,
      false,
      false,
      false,
      false,
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <UserInfo
            updateUserInfo={[Function]}
            user="Mentee"
          />,
          false,
          false,
          false,
          false,
          false,
          false,
          false,
        ],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "updateUserInfo": [Function],
            "user": "Mentee",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        false,
        false,
        false,
        false,
        false,
        false,
        false,
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromProps": Object {
            "hasShouldComponentUpdateBug": false,
          },
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
  Symbol(enzyme.__childContext__): null,
}
`;

exports[`Form snapshots should have match a page one snapshot(default) for mentor 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Form
    location={
      Object {
        "pathname": "/mentor",
      }
    }
    sendForm={[MockFunction]}
    updateForm={[MockFunction]}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <UserInfo
          updateUserInfo={[Function]}
          user="Mentor"
        />,
        false,
        false,
        false,
        false,
        false,
        false,
        false,
      ],
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "updateUserInfo": [Function],
          "user": "Mentor",
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      false,
      false,
      false,
      false,
      false,
      false,
      false,
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <UserInfo
            updateUserInfo={[Function]}
            user="Mentor"
          />,
          false,
          false,
          false,
          false,
          false,
          false,
          false,
        ],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "updateUserInfo": [Function],
            "user": "Mentor",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        false,
        false,
        false,
        false,
        false,
        false,
        false,
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromProps": Object {
            "hasShouldComponentUpdateBug": false,
          },
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
  Symbol(enzyme.__childContext__): null,
}
`;

exports[`Form snapshots should have match a page six snapshot 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Form
    location={
      Object {
        "pathname": "/mentor",
      }
    }
    sendForm={[MockFunction]}
    updateForm={[MockFunction]}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        false,
        false,
        false,
        false,
        false,
        false,
        <UserNonTechSkills
          updateUserInfo={[Function]}
          user="Mentor"
        />,
        false,
      ],
    },
    "ref": null,
    "rendered": Array [
      false,
      false,
      false,
      false,
      false,
      false,
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "updateUserInfo": [Function],
          "user": "Mentor",
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      false,
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          false,
          false,
          false,
          false,
          false,
          false,
          <UserNonTechSkills
            updateUserInfo={[Function]}
            user="Mentor"
          />,
          false,
        ],
      },
      "ref": null,
      "rendered": Array [
        false,
        false,
        false,
        false,
        false,
        false,
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "updateUserInfo": [Function],
            "user": "Mentor",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        false,
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromProps": Object {
            "hasShouldComponentUpdateBug": false,
          },
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
  Symbol(enzyme.__childContext__): null,
}
`;

exports[`Form snapshots should have match a page three snapshot 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Form
    location={
      Object {
        "pathname": "/mentor",
      }
    }
    sendForm={[MockFunction]}
    updateForm={[MockFunction]}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        false,
        false,
        false,
        false,
        <UserSchedule
          updateUserInfo={[Function]}
          user="Mentor"
        />,
        false,
        false,
        false,
      ],
    },
    "ref": null,
    "rendered": Array [
      false,
      false,
      false,
      false,
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "updateUserInfo": [Function],
          "user": "Mentor",
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      false,
      false,
      false,
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          false,
          false,
          false,
          false,
          <UserSchedule
            updateUserInfo={[Function]}
            user="Mentor"
          />,
          false,
          false,
          false,
        ],
      },
      "ref": null,
      "rendered": Array [
        false,
        false,
        false,
        false,
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "updateUserInfo": [Function],
            "user": "Mentor",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        false,
        false,
        false,
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromProps": Object {
            "hasShouldComponentUpdateBug": false,
          },
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
  Symbol(enzyme.__childContext__): null,
}
`;

exports[`Form snapshots should have match a page two snapshot 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Form
    location={
      Object {
        "pathname": "/mentor",
      }
    }
    sendForm={[MockFunction]}
    updateForm={[MockFunction]}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        false,
        <UserBio
          updateUserInfo={[Function]}
          user="Mentor"
        />,
        false,
        false,
        false,
        false,
        false,
        false,
      ],
    },
    "ref": null,
    "rendered": Array [
      false,
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "updateUserInfo": [Function],
          "user": "Mentor",
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      false,
      false,
      false,
      false,
      false,
      false,
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          false,
          <UserBio
            updateUserInfo={[Function]}
            user="Mentor"
          />,
          false,
          false,
          false,
          false,
          false,
          false,
        ],
      },
      "ref": null,
      "rendered": Array [
        false,
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "updateUserInfo": [Function],
            "user": "Mentor",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        false,
        false,
        false,
        false,
        false,
        false,
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromProps": Object {
            "hasShouldComponentUpdateBug": false,
          },
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
  Symbol(enzyme.__childContext__): null,
}
`;

exports[`Form snapshots should have match a page two snapshot 2`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Form
    location={
      Object {
        "pathname": "/mentor",
      }
    }
    sendForm={[MockFunction]}
    updateForm={[MockFunction]}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        false,
        false,
        false,
        <UserBackground
          updateUserInfo={[Function]}
          user="Mentor"
        />,
        false,
        false,
        false,
        false,
      ],
    },
    "ref": null,
    "rendered": Array [
      false,
      false,
      false,
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "updateUserInfo": [Function],
          "user": "Mentor",
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      false,
      false,
      false,
      false,
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          false,
          false,
          false,
          <UserBackground
            updateUserInfo={[Function]}
            user="Mentor"
          />,
          false,
          false,
          false,
          false,
        ],
      },
      "ref": null,
      "rendered": Array [
        false,
        false,
        false,
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "updateUserInfo": [Function],
            "user": "Mentor",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        false,
        false,
        false,
        false,
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromProps": Object {
            "hasShouldComponentUpdateBug": false,
          },
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
  Symbol(enzyme.__childContext__): null,
}
`;
